version: 2.1

jobs:
  api:
    docker:
      - image: circleci/python:3.9.6-buster
        environment:
          SECRET_KEY: ThisIsSpecialSecurityKey
          DEBUG: "False"
          ALLOWED_HOSTS: localhost,django,127.0.0.1
          DB_USER: user
          DB_PASSWORD: password
          DB_PORT: 3306
          DB_HOST: 127.0.0.1
          DB_ENGINE: mysql.connector.django
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: P@ssw0rd
          MYSQL_DATABASE: vantan_store_db
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_PORT: 3306
    steps:
      - checkout
      - restore_cache:
          name: Restore caches.
          keys:
            - v1-dependencies-{{ checksum "./Docker/python/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install python packages.
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r ./Docker/python/requirements.txt
      - save_cache:
          name: Save caches.
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "./Docker/python/requirements.txt" }}
      - run:
          name: Wait for db.
          command: |
            . venv/bin/activate
            python ./api/manage.py wait_for_db
      - run:
          name: Make migrations.
          command: |
            . venv/bin/activate
            python ./api/manage.py makemigrations
      - run:
          name: Migrate
          command: |
            . venv/bin/activate
            python ./api/manage.py migrate
      - run:
          name: init data in database.
          command: |
            . venv/bin/activate
            cd api && sh ./config/models/init_data.sh
      - run:
          name: open Server
          background: true
          command: |
            . venv/bin/activate
            uwsgi --socket :8000 --http :8001  --module config.wsgi --py-autoreload 1 -b 32768

  web:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - restore_cache:
          name: Restore caches.
          key: v1-npm-deps-{{ checksum "./web/yarn.lock" }}
      - run:
          name: yarn install
          working_directory: web
          command: yarn install
      - run:
          name: yarn build
          working_directory: web
          command: yarn build
      - run:
          name: yarn start
          working_directory: web
          background: true
          command: yarn start
      - save_cache:
          name: Save caches.
          paths:
            - ./web/node_modules
          key: v1-npm-deps-{{ checksum "./web/yarn.lock" }}

workflows:
  build:
    jobs:
      - api:
          filters:
            branches:
              only:
                - main
                - develop
      - web:
          filters:
            branches:
              only:
                - main
                - develop
