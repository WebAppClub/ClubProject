version: 2.1

orbs:
  discord: teka23/discord@0.0.1

jobs:
  api:
    docker:
      - image: circleci/python:3.9.6-buster
        environment:
          SECRET_KEY: ThisIsSpecialSecurityKey
          DEBUG: "False"
          ALLOWED_HOSTS: localhost,django,127.0.0.1
          DB_USER: user
          DB_PASSWORD: password
          DB_PORT: 3306
          DB_HOST: 127.0.0.1
          DB_ENGINE: mysql.connector.django
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: P@ssw0rd
          MYSQL_DATABASE: vantan_store_db
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_PORT: 3306
    steps:
      - checkout
      - restore_cache:
          name: Restore caches.
          keys:
            - v1-python-cache-{{ checksum "./Docker/python/requirements.txt" }}
      - run:
          name: Install dependencies.
          command: |
            python3 -m venv venv
            source venv/bin/activate
            venv/bin/python3 -m pip install --upgrade pip
            venv/bin/python3 -m pip install -r ./Docker/python/requirements.txt
      - save_cache:
          name: Save caches.
          key: v1-python-cache-{{ checksum "./Docker/python/requirements.txt" }}
          paths:
            - venv/
      - run:
          name: Create RSA Private file
          command: |
            openssl genrsa 2024 > ./api/config/keys/private.key.pem
      - run:
          name: Create RSA Public file
          command: |
            openssl rsa -in ./api/config/keys/private.key.pem -pubout -out ./api/config/keys/public.key.pem
      - run:
          name: Wait for db.
          command: |
            source venv/bin/activate
            venv/bin/python3 ./api/manage.py wait_for_db
      - run:
          name: Make migrations.
          command: |
            source venv/bin/activate
            venv/bin/python3 ./api/manage.py makemigrations
      - run:
          name: Migrate
          command: |
            source venv/bin/activate
            venv/bin/python3 ./api/manage.py migrate
      - run:
          name: init data in database.
          command: |
            set -e
            source venv/bin/activate
            venv/bin/python3 ./api/manage.py loaddata ./api/*/fixtures/*.json
      - run:
          name: open Server
          background: true
          command: |
            source venv/bin/activate
            uwsgi --socket :8000 --http :8001  --module config.wsgi --py-autoreload 1 -b 32768
      - run:
          name: test
          command: |
            source venv/bin/activate
            venv/bin/python3 ./api/manage.py test --settings=config.settings.circleci_test --verbosity 2

  web:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - restore_cache:
          name: Restore caches.
          key: v1-npm-deps-{{ checksum "./web/yarn.lock" }}
      - run:
          name: yarn install
          working_directory: web
          command: yarn install
      - run:
          name: yarn build
          working_directory: web
          command: yarn build
      - run:
          name: yarn start
          working_directory: web
          background: true
          command: yarn start
      - save_cache:
          name: Save caches.
          paths:
            - ./web/node_modules
          key: v1-npm-deps-{{ checksum "./web/yarn.lock" }}

workflows:
  build:
    jobs:
      - discord/approval-notification:
          message: "Now building API and Nuxt web..."
          webhook: ${DISCORD_WEB_HOOK_URL}
      - api
      - web
